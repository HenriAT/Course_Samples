package seurantakaaviot.test;
// Generated by ComTest BEGIN
import java.util.List;
import static org.junit.Assert.*;
import org.junit.*;
import seurantakaaviot.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.23 00:17:32 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class DatapisteetTest {



  // Generated by ComTest BEGIN
  /** testLisaa47 */
  @Test
  public void testLisaa47() {    // Datapisteet: 47
    Datapisteet datapisteet = new Datapisteet(); 
    Datapiste dat1 = new Datapiste(1); 
    Datapiste dat2 = new Datapiste(1); 
    Datapiste dat3 = new Datapiste(2); 
    Datapiste dat4 = new Datapiste(1); 
    Datapiste dat5 = new Datapiste(2); 
    datapisteet.lisaa(dat1); 
    datapisteet.lisaa(dat2); 
    assertEquals("From: Datapisteet line: 56", 2, datapisteet.getLkm()); 
    datapisteet.lisaa(dat3); 
    datapisteet.lisaa(dat4); 
    datapisteet.lisaa(dat5); 
    assertEquals("From: Datapisteet line: 60", 5, datapisteet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa75 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa75() throws CloneNotSupportedException {    // Datapisteet: 75
    Datapisteet datapisteet = new Datapisteet(); 
    Datapiste dat1 = new Datapiste(1); dat1.rekisteroi(); 
    Datapiste dat2 = new Datapiste(2); dat2.rekisteroi(); 
    datapisteet.korvaaTaiLisaa(dat1); assertEquals("From: Datapisteet line: 81", 1, datapisteet.getLkm()); 
    datapisteet.korvaaTaiLisaa(dat2); assertEquals("From: Datapisteet line: 82", 2, datapisteet.getLkm()); 
    Datapiste dat3 = dat1.clone(); 
    datapisteet.korvaaTaiLisaa(dat3); assertEquals("From: Datapisteet line: 84", 2, datapisteet.getLkm()); 
    List<Datapiste> d = datapisteet.annaDatapisteet(1); 
    assertEquals("From: Datapisteet line: 86", 1, d.size()); 
    assertEquals("From: Datapisteet line: 87", dat3, d.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista108 */
  @Test
  public void testPoista108() {    // Datapisteet: 108
    Datapisteet datapisteet = new Datapisteet(); 
    Datapiste dat1 = new Datapiste(1); 
    Datapiste dat2 = new Datapiste(1); 
    Datapiste dat3 = new Datapiste(2); 
    Datapiste dat4 = new Datapiste(1); 
    Datapiste dat5 = new Datapiste(2); 
    datapisteet.lisaa(dat1); 
    datapisteet.lisaa(dat2); 
    datapisteet.lisaa(dat3); 
    datapisteet.lisaa(dat5); 
    assertEquals("From: Datapisteet line: 120", false, datapisteet.poista(dat4)); assertEquals("From: Datapisteet line: 120", 4, datapisteet.getLkm()); 
    assertEquals("From: Datapisteet line: 121", true, datapisteet.poista(dat1)); assertEquals("From: Datapisteet line: 121", 3, datapisteet.getLkm()); 
    List<Datapiste> d = datapisteet.annaDatapisteet(1); 
    assertEquals("From: Datapisteet line: 123", 1, d.size()); 
    assertEquals("From: Datapisteet line: 124", dat2, d.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaKaavionDatapisteet139 */
  @Test
  public void testPoistaKaavionDatapisteet139() {    // Datapisteet: 139
    Datapisteet datapisteet = new Datapisteet(); 
    Datapiste dat1 = new Datapiste(1); 
    Datapiste dat2 = new Datapiste(1); 
    Datapiste dat3 = new Datapiste(2); 
    Datapiste dat4 = new Datapiste(1); 
    Datapiste dat5 = new Datapiste(2); 
    datapisteet.lisaa(dat1); 
    datapisteet.lisaa(dat2); 
    datapisteet.lisaa(dat3); 
    datapisteet.lisaa(dat4); 
    datapisteet.lisaa(dat5); 
    assertEquals("From: Datapisteet line: 152", 3, datapisteet.poistaKaavionDatapisteet(1)); assertEquals("From: Datapisteet line: 152", 2, datapisteet.getLkm()); 
    assertEquals("From: Datapisteet line: 153", 0, datapisteet.poistaKaavionDatapisteet(3)); assertEquals("From: Datapisteet line: 153", 2, datapisteet.getLkm()); 
    List<Datapiste> d = datapisteet.annaDatapisteet(2); 
    assertEquals("From: Datapisteet line: 155", 2, d.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaDatapisteet176 */
  @Test
  public void testAnnaDatapisteet176() {    // Datapisteet: 176
    Datapisteet datapisteet = new Datapisteet(); 
    Datapiste dat1 = new Datapiste(); dat1.taytaDatapiste(1); 
    Datapiste dat2 = new Datapiste(); dat2.taytaDatapiste(1); 
    Datapiste dat3 = new Datapiste(); dat3.taytaDatapiste(2); 
    Datapiste dat4 = new Datapiste(); dat4.taytaDatapiste(1); 
    Datapiste dat5 = new Datapiste(); dat5.taytaDatapiste(2); 
    datapisteet.lisaa(dat1); 
    datapisteet.lisaa(dat2); 
    datapisteet.lisaa(dat3); 
    datapisteet.lisaa(dat4); 
    datapisteet.lisaa(dat5); 
    List<Datapiste> d = datapisteet.annaDatapisteet(1); 
    assertEquals("From: Datapisteet line: 190", 3, d.size()); 
    d = datapisteet.annaDatapisteet(2); 
    assertEquals("From: Datapisteet line: 192", 2, d.size()); 
  } // Generated by ComTest END
}